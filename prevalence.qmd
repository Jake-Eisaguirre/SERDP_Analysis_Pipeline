---
title: "bd_prevalence_GAM"
format: html
editor: visual
---

## Load Packages

```{r}
#| output: false
if (!require(librarian)){
  install.packages("librarian")
  library(librarian)
}

librarian::shelf(tidyverse, RPostgres, DBI, here, lubridate, mgcv, voxel)

```

## Connect to `survey_data` schema in `ribbitr` database

```{r}
#| output: false
tryCatch({
    drv <- dbDriver("Postgres")
    print("Connecting to Databaseâ€¦")
    connection <- dbConnect(drv,
                 dbname = Sys.getenv("aws_dbname"),
                 host = Sys.getenv("aws_host"),
                 port = Sys.getenv("aws_port"),
                 user = Sys.getenv("aws_user"),
                 password = Sys.getenv("aws_password"),
                 timezone=NULL)
    print("Database Connected!")
    },
    error=function(cond) {
            print("Unable to connect to Database.")
    })

#search path
dbExecute(connection, "set search_path to survey_data")

```

## Query SERDP Bd data - Prevelance

```{r}

q <- "select r.region, s.site, v.date, v.survey_time,
     s2.detection_type, c.species_capture, sb.bd_swab_id,
     sb.bd_load
     from region r
     join site s on r.region_id = s.region_id 
     join visit v on s.site_id = v.site_id 
     join survey s2 on v.visit_id = s2.visit_id
     join capture c on s2.survey_id = c.survey_id 
     full join serdp_bd sb on c.bd_swab_id = sb.bd_swab_id
     where r.region = 'pennsylvania'
     and v.date < '2020-12-31';"

raw_prev <- dbGetQuery(connection, q)

```

## Clean data and add prevalance

```{r}

clean_prev <- raw_prev %>% 
  drop_na(species_capture) %>%
  drop_na(bd_swab_id) %>% 
  select(site, date, species_capture, bd_load) %>% 
  mutate(infected = case_when(bd_load >1 ~ 1,
                              is.na(bd_load) ~ 0),
         month = month(date),
         year = year(date)) %>%
  #unite(year_month, c("year", "month"), sep = "-") %>% 
  group_by(site, species_capture, date) %>% 
  mutate(n_infected = sum(infected),
         n = n(),
         prevalence = n_infected/n) %>% 
  ungroup() %>% 
  group_by(site, species_capture, month) %>% 
  mutate(average_prev = mean(prevalence)) %>% 
  ungroup()



# not much general trend across time
plot(clean_prev$month, clean_prev$average_prev)

```


## Now create loop to run GAM for each species `average_prev ~ s(month)`
```{r}
# Create empty objects
species_list <- unique(clean_prev$species_capture)

plots <- list()

spec_names <- c()

# Loop through each species
for (i in 1:length(species_list)) {
  
  # find species with low k value
  k <- clean_prev %>% 
    filter(species_capture == species_list[i]) %>% 
    select(month) %>% 
    unique() %>% 
    nrow()
  
  # only run models for species with k>2
  if (k > 2) {
  
      # add filter species list with k>2 - 3 species have too little data    
      spec_names[i] <- species_list[i]
      
      # filter clean data set for species list of k>2
      dat <- clean_prev %>% 
        select(species_capture, month, average_prev) %>% 
        filter(species_capture == species_list[i]) %>%  
        ungroup() %>% 
        select(!species_capture)
  
      # run GAM per species
      gam <- gam(average_prev ~ s(month, k = k), data = dat) 
      
      # create new object in environment for each model output per species
      assign(species_list[i], gam) 
      
      # make GAM plot
      p <- plotGAM(gam, smooth.cov = 'month') +
           theme_classic() +
           geom_point(data = dat, aes(x=month, y = average_prev), alpha = 0.08, pch = 1) +
           ggtitle(paste(species_list[i]))
    
    # save GAM plot in list
     plots[[i]] <- p
    
  
  }
  
  # Error checking during loop
  print(paste("done with", species_list[i]))

}

```

## Examine plots
```{r}


plots[1:length(plots)]


```

## Examine Model Outputs - Still working on this
### Print all GAM model outputs
```{r}

ClassFilter <- function(x) inherits(get(x), 'gam' )

Objs <- Filter( ClassFilter, ls() )

print(Objs)

```

### Select which GAM model to view
```{r}
summary(lithobates_catesbeianus)
```


## GAM Model `average_prev ~ s(month)` per species - PRACTICE ON ONE SPECIES

### Questions:

-   k is basis function which is what? how many time intervals? Amount a function is ran over the data?

-   How to set k? Always choose max interval?

-   How to choose sp?

-   What is the transformation applied to y axis?

-   Do we only want to examine trend with time/month? Do we want to add other predictors? (multivariate?)

-   What `method` do we choose? `GCV.Cp`?

-   How do I read the significant results section?

-   Concurvity check does what?

```{r}
# Bullfrog test

bull_dat <- clean_prev %>% 
  select(species_capture, average_prev, month) %>% 
  filter(species_capture == "lithobates_catesbeianus") %>% 
  ungroup() %>% 
  select(!species_capture)

bull_gam <- gam(average_prev ~ s(year_month, k =50), data = bull_dat)

summary(bull_gam)

plot(bull_gam, residuals = TRUE, pch = 1)

coef(bull_gam)

bull_gam$sp

plot(bull_gam, shade = T, shade.col = "lightgreen",
     shift = coef(bull_gam)[1], seWithMean = T)


plotGAM(bull_gam, smooth.cov = 'month') +
  theme_classic() +
  geom_point(data = bull_dat, aes(x=month, y = average_prev), alpha = 0.08, pch = 1) 

gam.check(bull_gam)

concurvity(bull_gam, full = T)

```
